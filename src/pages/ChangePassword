import React from 'react';
import apiConfig from "../config/api.config"

class changePassword extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      oldPass: "",
      pass: "",
      confirm: ""
    };
    this.handleChangeOldPass = this.handleChangeOldPass.bind(this);
    this.handleChangePass = this.handleChangePass.bind(this);
    this.handleChangeConfirm = this.handleChangeConfirm.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  validatePassword(password){
    var decimal=  /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,55}$/;
    if(password.match(decimal)) 
    {
      return true;
    }
    else
    { 
      this.setState({errorMessage: "The password didn't reach the standard!"})
      return false;
    }
  } 


  handleChangeOldPass(event)   {    this.setState({oldPass: event.target.value});  }
  handleChangePass(event)    {    this.setState({pass: event.target.value});   }
  handleChangeConfirm(event) {    this.setState({confirm: event.target.value});}

  handleSubmit(event) {

        if(!this.validatePassword(this.state.pass)){
            this.setState({errorMessage: "The passwords didn't match!"})
            return false;
        }

        // Simple POST request with a JSON body using fetch
        const requestOptions = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
            oldPass: this.state.oldPass,
            password: this.state.pass,
        })}

        fetch(apiConfig.url + "/v0/user/changePassword", requestOptions)
        .then(Response => {
          if(!Response.ok){
            this.setState({errorMessage: Response.statusText})
          }

        })
          .catch(error => (this.setState({errorMessage: error.message})));
        
    } 


    render() {   
        return(
          <form onSubmit={this.handleSubmit}>
              <label>
                Actual Password:
                <input type="password" value={this.state.oldPass} onChange={this.handleChangeOldPass} required/>
              </label>
              <label>
                New Password:
                <input type="password" value={this.state.pass} onChange={this.handleChangePass} required/>
              </label>
              <label>
                Confirm Password:
                <input type="password" value={this.state.confirm} onChange={this.handleChangeConfirm} required/>
              </label>
                <input type="submit" value="Submit" />
                { this.state.errorMessage &&
                  <p className="error" > { this.state.errorMessage } </p> }
          </form>
        )
    }
} 


export default changePassword